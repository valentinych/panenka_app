#!/bin/bash

# –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ GitHub
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./update.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ

BRANCH="main"

echo "‚¨áÔ∏è  –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ GitHub"
echo "==============================="

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
pkill -f "python run.py" 2>/dev/null || echo "   –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å git
echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git..."
if [[ -n $(git status --porcelain) ]]; then
    echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
    git status --short
    echo ""
    echo "ü§î –ß—Ç–æ –¥–µ–ª–∞—Ç—å —Å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏?"
    echo "1) –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ stash (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
    echo "2) –ó–∞–∫–æ–º–º–∏—Ç–∏—Ç—å —Å–µ–π—á–∞—Å"
    echo "3) –û—Ç–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è (–û–°–¢–û–†–û–ñ–ù–û!)"
    echo "4) –ü—Ä–µ—Ä–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-4): " choice
    
    case $choice in
        1)
            echo "üì¶ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ stash..."
            git stash push -m "Auto stash before update $(date '+%Y-%m-%d %H:%M:%S')"
            ;;
        2)
            read -p "üí¨ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: " commit_message
            if [ -z "$commit_message" ]; then
                commit_message="WIP: Auto commit before update $(date '+%Y-%m-%d %H:%M:%S')"
            fi
            echo "üìù –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
            git add .
            git commit -m "$commit_message"
            ;;
        3)
            echo "‚ö†Ô∏è  –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
            read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å! (y/N): " confirm
            if [[ $confirm =~ ^[Yy]$ ]]; then
                git reset --hard HEAD
                git clean -fd
                echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã"
            else
                echo "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞"
                exit 1
            fi
            ;;
        4)
            echo "‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ"
            exit 1
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø—Ä–µ—Ä—ã–≤–∞–µ–º"
            exit 1
            ;;
    esac
else
    echo "‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è"
fi

# –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
echo "üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:"
echo "   –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $(git branch --show-current)"
echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --oneline)"

# –°—Ç—è–Ω—É—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ GitHub
echo ""
echo "‚¨áÔ∏è  –°—Ç—è–≥–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ GitHub..."
git fetch origin

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
LOCAL=$(git rev-parse HEAD)
REMOTE=$(git rev-parse origin/$BRANCH)

if [ "$LOCAL" = "$REMOTE" ]; then
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞ —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–∞"
    echo "   –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏"
else
    echo "üì• –ù–∞–π–¥–µ–Ω—ã –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
    echo ""
    git log --oneline HEAD..origin/$BRANCH
    echo ""
    
    # –í—ã–ø–æ–ª–Ω–∏—Ç—å merge
    echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º merge..."
    if git pull origin $BRANCH --no-edit; then
        echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
        echo ""
        echo "üìä –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:"
        echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --oneline)"
        
        # –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å stash –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω
        if git stash list | grep -q "Auto stash before update"; then
            echo ""
            echo "üì¶ –ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π stash"
            read -p "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è? (y/N): " restore_stash
            if [[ $restore_stash =~ ^[Yy]$ ]]; then
                echo "üì§ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ stash..."
                git stash pop
                echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            fi
        fi
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ merge"
        echo "üîß –í–æ–∑–º–æ–∂–Ω–æ, –µ—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∏—Ö –≤—Ä—É—á–Ω—É—é:"
        echo "   git status"
        echo "   git mergetool  # –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é"
        echo "   git commit"
        exit 1
    fi
fi

echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
